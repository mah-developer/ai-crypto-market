2025-05-23 17:36:18.992[1748009178992] | INFO  | main       | c.a.core.CoreApplication             - Starting CoreApplication using Java 21.0.5 with PID 4340 (E:\_AiCrypto\ai-crypto-market-git\target\classes started by Administrator in E:\_AiCrypto\ai-crypto-market-git)
2025-05-23 17:36:18.993[1748009178993] | INFO  | main       | c.a.core.CoreApplication             - No active profile set, falling back to 1 default profile: "default"
2025-05-23 17:36:23.464[1748009183464] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-23 17:36:23.465[1748009183465] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-23 17:36:23.503[1748009183503] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ai_crypto_market.core.model.repository.AppConfigRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-23 17:36:23.505[1748009183505] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ai_crypto_market.core.model.repository.ExchangeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-23 17:36:23.507[1748009183507] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ai_crypto_market.core.model.repository.ExchangeStockHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-23 17:36:23.508[1748009183508] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ai_crypto_market.core.model.repository.NewsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-23 17:36:23.509[1748009183509] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ai_crypto_market.core.model.repository.PositionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-23 17:36:23.511[1748009183511] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ai_crypto_market.core.model.repository.StockRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-23 17:36:23.512[1748009183512] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ai_crypto_market.core.model.repository.StrategyRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-23 17:36:23.513[1748009183513] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ai_crypto_market.core.model.repository.WalletRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-23 17:36:23.514[1748009183514] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 0 JDBC repository interfaces.
2025-05-23 17:36:23.521[1748009183521] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-23 17:36:23.522[1748009183522] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-23 17:36:23.613[1748009183613] | INFO  | main       | o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 8 JPA repository interfaces.
2025-05-23 17:36:24.795[1748009184795] | INFO  | main       | o.s.b.w.e.tomcat.TomcatWebServer     - Tomcat initialized with port 8585 (http)
2025-05-23 17:36:24.807[1748009184807] | INFO  | main       | o.a.coyote.http11.Http11NioProtocol  - Initializing ProtocolHandler ["http-nio-8585"]
2025-05-23 17:36:24.809[1748009184809] | INFO  | main       | o.a.catalina.core.StandardService    - Starting service [Tomcat]
2025-05-23 17:36:24.809[1748009184809] | INFO  | main       | o.a.catalina.core.StandardEngine     - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-23 17:36:24.888[1748009184888] | INFO  | main       | o.a.c.c.C.[Tomcat].[localhost].[/]   - Initializing Spring embedded WebApplicationContext
2025-05-23 17:36:24.888[1748009184888] | INFO  | main       | o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4746 ms
2025-05-23 17:36:25.488[1748009185488] | INFO  | main       | o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-23 17:36:25.649[1748009185649] | INFO  | main       | org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-23 17:36:25.688[1748009185688] | INFO  | main       | o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
2025-05-23 17:36:26.196[1748009186196] | INFO  | main       | o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-23 17:36:26.257[1748009186257] | INFO  | main       | com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
2025-05-23 17:36:31.163[1748009191163] | INFO  | main       | com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection oracle.jdbc.driver.T4CConnection@5c839677
2025-05-23 17:36:31.164[1748009191164] | INFO  | main       | com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
2025-05-23 17:36:32.342[1748009192342] | WARN  | main       | org.hibernate.orm.deprecation        - HHH90000025: OracleDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-23 17:36:32.667[1748009192667] | INFO  | main       | o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 23.6
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-23 17:36:35.101[1748009195101] | DEBUG | main       | org.hibernate.SQL                    - 
    create global temporary table HTE_position(buy_percent_of_available_balance number(10, 0), current_stop_loss number(15, 2), current_target_price number(15, 2), entry_price number(15, 2), exit_price number(15, 2), leverage number(10, 0), quantity number(15, 2), rn_ number(10, 0) not null, created_at timestamp(6), deleted_at timestamp(6), entry_time timestamp(6), exit_time timestamp(6), fk_stock number(19, 0), fk_strategy number(19, 0), fk_wallet number(19, 0), id number(19, 0), updated_at timestamp(6), activities varchar2(255 char), exchange_position_id varchar2(255 char), position_status varchar2(255 char), position_type varchar2(255 char), primary key (rn_)) 
        on commit delete rows
2025-05-23 17:36:36.801[1748009196801] | INFO  | main       | o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-23 17:36:36.816[1748009196816] | DEBUG | main       | org.hibernate.SQL                    - 
    drop table if exists exchange cascade constraints
2025-05-23 17:36:37.050[1748009197050] | DEBUG | main       | org.hibernate.SQL                    - 
    drop table if exists position cascade constraints
2025-05-23 17:36:37.053[1748009197053] | DEBUG | main       | org.hibernate.SQL                    - 
    drop table if exists tb_app_config cascade constraints
2025-05-23 17:36:37.066[1748009197066] | DEBUG | main       | org.hibernate.SQL                    - 
    drop table if exists tb_exchange_stock cascade constraints
2025-05-23 17:36:37.068[1748009197068] | DEBUG | main       | org.hibernate.SQL                    - 
    drop table if exists tb_exchange_stock_history cascade constraints
2025-05-23 17:36:37.181[1748009197181] | DEBUG | main       | org.hibernate.SQL                    - 
    drop table if exists tb_news cascade constraints
2025-05-23 17:36:37.186[1748009197186] | DEBUG | main       | org.hibernate.SQL                    - 
    drop table if exists tb_stock cascade constraints
2025-05-23 17:36:37.190[1748009197190] | DEBUG | main       | org.hibernate.SQL                    - 
    drop table if exists tb_strategy cascade constraints
2025-05-23 17:36:37.213[1748009197213] | DEBUG | main       | org.hibernate.SQL                    - 
    drop table if exists tb_user cascade constraints
2025-05-23 17:36:37.215[1748009197215] | DEBUG | main       | org.hibernate.SQL                    - 
    drop table if exists tb_wallet cascade constraints
2025-05-23 17:36:37.217[1748009197217] | DEBUG | main       | org.hibernate.SQL                    - 
    drop sequence if exists position_seq
2025-05-23 17:36:37.240[1748009197240] | DEBUG | main       | org.hibernate.SQL                    - 
    create sequence position_seq start with 1 increment by 50
2025-05-23 17:36:37.719[1748009197719] | DEBUG | main       | org.hibernate.SQL                    - 
    create table exchange (
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        pk_tb_exchange number(19,0) generated by default as identity,
        updated_at timestamp(6),
        api_url varchar2(255 char) not null,
        exchange_name varchar2(255 char) not null check (exchange_name in ('BINANCE','BING_X','OANDA','L_BANK')),
        market_type varchar2(255 char) not null check (market_type in ('FX','CRYPTO')),
        primary key (pk_tb_exchange)
    )
2025-05-23 17:36:39.009[1748009199009] | DEBUG | main       | org.hibernate.SQL                    - 
    create table position (
        buy_percent_of_available_balance number(10,0),
        current_stop_loss number(15,2),
        current_target_price number(15,2),
        entry_price number(15,2),
        exit_price number(15,2),
        leverage number(10,0) not null,
        quantity number(15,2),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        entry_time timestamp(6),
        exit_time timestamp(6),
        fk_stock number(19,0),
        fk_strategy number(19,0),
        fk_wallet number(19,0),
        id number(19,0) not null,
        updated_at timestamp(6),
        activities varchar2(255 char),
        exchange_position_id varchar2(255 char),
        position_status varchar2(255 char) check (position_status in ('PENDING','FILLED','CANCELLED','SIGNALONLY','OPEN')),
        position_type varchar2(255 char) check (position_type in ('SHORT','LONG','NONE')),
        primary key (id)
    )
2025-05-23 17:36:39.054[1748009199054] | DEBUG | main       | org.hibernate.SQL                    - 
    create table tb_app_config (
        allowed_weight_for_open_new_position_crypto_stock number(10,0) not null,
        default_exchange_crypto_name number(3,0) check (default_exchange_crypto_name between 0 and 3),
        default_percent_of_available_per_crypto_position number(10,0) not null,
        default_time_frame_crypto number(3,0) check (default_time_frame_crypto between 0 and 6),
        pk_tb_app_config number(19,0) generated by default as identity,
        primary key (pk_tb_app_config)
    )
2025-05-23 17:36:39.113[1748009199113] | DEBUG | main       | org.hibernate.SQL                    - 
    create table tb_exchange_stock (
        lot number(15,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        exchange_id number(19,0) not null,
        stock_id number(19,0) not null,
        updated_at timestamp(6),
        primary key (exchange_id, stock_id)
    )
2025-05-23 17:36:39.181[1748009199181] | DEBUG | main       | org.hibernate.SQL                    - 
    create table tb_exchange_stock_history (
        close_price number(15,2) not null,
        high number(15,2) not null,
        low number(15,2) not null,
        open_price number(15,2) not null,
        volume number(15,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        exchange_id number(19,0) not null,
        pk_tb_exchange_stock_history number(19,0) generated by default as identity,
        stock_id number(19,0) not null,
        updated_at timestamp(6),
        change_type varchar2(255 char) not null check (change_type in ('INSERT','UPDATE','DELETE')),
        primary key (pk_tb_exchange_stock_history)
    )
2025-05-23 17:36:39.272[1748009199272] | DEBUG | main       | org.hibernate.SQL                    - 
    create table tb_news (
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        pk_tb_news number(19,0) generated by default as identity,
        publish_time timestamp(6) not null,
        updated_at timestamp(6),
        description varchar2(1000 char),
        effects varchar2(255 char),
        impact varchar2(255 char) not null check (impact in ('LOW','MEDIUM','HIGH')),
        source varchar2(255 char) not null,
        title varchar2(255 char) not null,
        primary key (pk_tb_news)
    )
2025-05-23 17:36:39.331[1748009199331] | DEBUG | main       | org.hibernate.SQL                    - 
    create table tb_stock (
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        pk_tb_stock number(19,0) generated by default as identity,
        updated_at timestamp(6),
        name varchar2(255 char) not null,
        symbol varchar2(255 char) not null unique,
        primary key (pk_tb_stock)
    )
2025-05-23 17:36:39.406[1748009199406] | DEBUG | main       | org.hibernate.SQL                    - 
    create table tb_strategy (
        default_leverage number(5,2),
        default_stop_loss_percent number(5,2),
        default_target_percent number(5,2),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        pk_tb_strategy number(19,0) generated by default as identity,
        updated_at timestamp(6),
        category varchar2(255 char),
        time_frame varchar2(255 char) check (time_frame in ('ONE_MINUTE','FIVE_MINUTES','FIFTEEN_MINUTES','THIRTY_MINUTES','ONE_HOUR','FOUR_HOURS','ONE_DAY')),
        type varchar2(255 char) check (type in ('FIBONACCI','HOLIDAY','NEWS')),
        primary key (pk_tb_strategy)
    )
2025-05-23 17:36:39.456[1748009199456] | DEBUG | main       | org.hibernate.SQL                    - 
    create table tb_user (
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        pk_tb_user number(19,0) generated by default as identity,
        updated_at timestamp(6),
        first_name varchar2(50 char) not null unique,
        last_name varchar2(50 char) not null unique,
        username varchar2(50 char) not null unique,
        email varchar2(100 char) not null unique,
        password_hash varchar2(255 char) not null,
        role varchar2(255 char) not null check (role in ('ADMIN','TRADER','BOT')),
        primary key (pk_tb_user)
    )
2025-05-23 17:36:39.489[1748009199489] | DEBUG | main       | org.hibernate.SQL                    - 
    create table tb_wallet (
        available_balance number(15,2) not null,
        is_active boolean not null,
        max_leverage number(5,2) not null,
        max_percent_of_available_per_position number(5,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        fk_exchange number(19,0) not null,
        fk_user number(19,0) not null,
        pk_tb_wallet number(19,0) generated by default as identity,
        updated_at timestamp(6),
        api_key varchar2(255 char) not null unique,
        api_secret varchar2(255 char) not null,
        name varchar2(255 char) not null,
        primary key (pk_tb_wallet)
    )
2025-05-23 17:36:39.548[1748009199548] | DEBUG | main       | org.hibernate.SQL                    - 
    create index idx_name 
       on exchange (name)
2025-05-23 17:36:39.587[1748009199587] | WARN  | main       | o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create index idx_name 
       on exchange (name)" via JDBC [ORA-00904: "NAME": invalid identifier

https://docs.oracle.com/error-help/db/ora-00904/]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create index idx_name 
       on exchange (name)" via JDBC [ORA-00904: "NAME": invalid identifier

https://docs.oracle.com/error-help/db/ora-00904/]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:390)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.ai_crypto_market.core.CoreApplication.main(CoreApplication.java:12)
Caused by: java.sql.SQLSyntaxErrorException: ORA-00904: "NAME": invalid identifier

https://docs.oracle.com/error-help/db/ora-00904/
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:709)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:609)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1347)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:1100)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:408)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:499)
	at oracle.jdbc.driver.T4CStatement.doOall8(T4CStatement.java:190)
	at oracle.jdbc.driver.T4CStatement.executeForRows(T4CStatement.java:1399)
	at oracle.jdbc.driver.OracleStatement.executeSQLStatement(OracleStatement.java:2008)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1621)
	at oracle.jdbc.driver.OracleStatement.executeInternal(OracleStatement.java:2686)
	at oracle.jdbc.driver.OracleStatement.execute(OracleStatement.java:2635)
	at oracle.jdbc.driver.OracleStatementWrapper.execute(OracleStatementWrapper.java:336)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00904: "NAME": invalid identifier

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:717)
	... 54 common frames omitted
2025-05-23 17:36:39.600[1748009199600] | DEBUG | main       | org.hibernate.SQL                    - 
    create index idx_api_url 
       on exchange (api_url)
2025-05-23 17:36:39.807[1748009199807] | DEBUG | main       | org.hibernate.SQL                    - 
    create index idx_exchange_stock 
       on tb_exchange_stock (exchange_id, stock_id)
2025-05-23 17:36:39.917[1748009199917] | WARN  | main       | o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create index idx_exchange_stock 
       on tb_exchange_stock (exchange_id, stock_id)" via JDBC [ORA-01408: such column list already indexed

https://docs.oracle.com/error-help/db/ora-01408/]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create index idx_exchange_stock 
       on tb_exchange_stock (exchange_id, stock_id)" via JDBC [ORA-01408: such column list already indexed

https://docs.oracle.com/error-help/db/ora-01408/]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:390)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.ai_crypto_market.core.CoreApplication.main(CoreApplication.java:12)
Caused by: java.sql.SQLException: ORA-01408: such column list already indexed

https://docs.oracle.com/error-help/db/ora-01408/
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:709)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:609)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1347)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:1100)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:408)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:499)
	at oracle.jdbc.driver.T4CStatement.doOall8(T4CStatement.java:190)
	at oracle.jdbc.driver.T4CStatement.executeForRows(T4CStatement.java:1399)
	at oracle.jdbc.driver.OracleStatement.executeSQLStatement(OracleStatement.java:2008)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1621)
	at oracle.jdbc.driver.OracleStatement.executeInternal(OracleStatement.java:2686)
	at oracle.jdbc.driver.OracleStatement.execute(OracleStatement.java:2635)
	at oracle.jdbc.driver.OracleStatementWrapper.execute(OracleStatementWrapper.java:336)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
Caused by: oracle.jdbc.OracleDatabaseException: ORA-01408: such column list already indexed

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:717)
	... 54 common frames omitted
2025-05-23 17:36:39.918[1748009199918] | DEBUG | main       | org.hibernate.SQL                    - 
    create index idx_email 
       on tb_user (email)
2025-05-23 17:36:39.982[1748009199982] | WARN  | main       | o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create index idx_email 
       on tb_user (email)" via JDBC [ORA-01408: such column list already indexed

https://docs.oracle.com/error-help/db/ora-01408/]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create index idx_email 
       on tb_user (email)" via JDBC [ORA-01408: such column list already indexed

https://docs.oracle.com/error-help/db/ora-01408/]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:390)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.ai_crypto_market.core.CoreApplication.main(CoreApplication.java:12)
Caused by: java.sql.SQLException: ORA-01408: such column list already indexed

https://docs.oracle.com/error-help/db/ora-01408/
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:709)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:609)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1347)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:1100)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:408)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:499)
	at oracle.jdbc.driver.T4CStatement.doOall8(T4CStatement.java:190)
	at oracle.jdbc.driver.T4CStatement.executeForRows(T4CStatement.java:1399)
	at oracle.jdbc.driver.OracleStatement.executeSQLStatement(OracleStatement.java:2008)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1621)
	at oracle.jdbc.driver.OracleStatement.executeInternal(OracleStatement.java:2686)
	at oracle.jdbc.driver.OracleStatement.execute(OracleStatement.java:2635)
	at oracle.jdbc.driver.OracleStatementWrapper.execute(OracleStatementWrapper.java:336)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
Caused by: oracle.jdbc.OracleDatabaseException: ORA-01408: such column list already indexed

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:717)
	... 54 common frames omitted
2025-05-23 17:36:39.983[1748009199983] | DEBUG | main       | org.hibernate.SQL                    - 
    create index idx_fk_user 
       on tb_wallet (fk_user)
2025-05-23 17:36:40.082[1748009200082] | DEBUG | main       | org.hibernate.SQL                    - 
    create index idx_fk_exchange 
       on tb_wallet (fk_exchange)
2025-05-23 17:36:40.157[1748009200157] | DEBUG | main       | org.hibernate.SQL                    - 
    alter table if exists position 
       add constraint FKjn7vcudifmb4876hpgduf8a7m 
       foreign key (fk_stock) 
       references tb_stock
2025-05-23 17:36:41.182[1748009201182] | DEBUG | main       | org.hibernate.SQL                    - 
    alter table if exists position 
       add constraint FKb68byvlg9wc7abs09piu3we79 
       foreign key (fk_strategy) 
       references tb_strategy
2025-05-23 17:36:41.232[1748009201232] | DEBUG | main       | org.hibernate.SQL                    - 
    alter table if exists position 
       add constraint FKtd1rph4m3wp4eay8tq5so44tf 
       foreign key (fk_wallet) 
       references tb_wallet
2025-05-23 17:36:41.324[1748009201324] | DEBUG | main       | org.hibernate.SQL                    - 
    alter table if exists tb_exchange_stock 
       add constraint FK7mt82s6142hhbay4f45c1g8up 
       foreign key (exchange_id) 
       references exchange
2025-05-23 17:36:41.382[1748009201382] | DEBUG | main       | org.hibernate.SQL                    - 
    alter table if exists tb_exchange_stock 
       add constraint FKsadi4frelxsrggxmvkrvr2907 
       foreign key (stock_id) 
       references tb_stock
2025-05-23 17:36:41.482[1748009201482] | DEBUG | main       | org.hibernate.SQL                    - 
    alter table if exists tb_exchange_stock_history 
       add constraint FK8ewit8luqur74gkddalfm8f0d 
       foreign key (exchange_id, stock_id) 
       references tb_exchange_stock
2025-05-23 17:36:41.607[1748009201607] | DEBUG | main       | org.hibernate.SQL                    - 
    alter table if exists tb_wallet 
       add constraint FKrgk60qau9uu83w6dk7bd4a5rr 
       foreign key (fk_exchange) 
       references exchange
2025-05-23 17:36:41.683[1748009201683] | DEBUG | main       | org.hibernate.SQL                    - 
    alter table if exists tb_wallet 
       add constraint FK7kd2fupx6el1x8cu3thmhdwp8 
       foreign key (fk_user) 
       references tb_user
2025-05-23 17:36:41.719[1748009201719] | INFO  | main       | o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-23 17:36:42.494[1748009202494] | INFO  | main       | o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-23 17:36:43.143[1748009203143] | WARN  | main       | o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-23 17:36:44.238[1748009204238] | INFO  | main       | o.a.coyote.http11.Http11NioProtocol  - Starting ProtocolHandler ["http-nio-8585"]
2025-05-23 17:36:44.270[1748009204270] | INFO  | main       | o.s.b.w.e.tomcat.TomcatWebServer     - Tomcat started on port 8585 (http) with context path '/'
2025-05-23 17:36:44.299[1748009204299] | INFO  | main       | c.a.core.CoreApplication             - Started CoreApplication in 27.833 seconds (process running for 35.15)
2025-05-23 17:36:44.448[1748009204448] | DEBUG | scheduling-1 | org.hibernate.SQL                    - 
    select
        ac1_0.pk_tb_app_config,
        ac1_0.allowed_weight_for_open_new_position_crypto_stock,
        ac1_0.default_exchange_crypto_name,
        ac1_0.default_percent_of_available_per_crypto_position,
        ac1_0.default_time_frame_crypto 
    from
        tb_app_config ac1_0
2025-05-23 17:37:40.546[1748009260546] | INFO  | SpringApplicationShutdownHook | o.s.b.w.e.tomcat.GracefulShutdown    - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-23 17:37:40.550[1748009260550] | INFO  | tomcat-shutdown | o.s.b.w.e.tomcat.GracefulShutdown    - Graceful shutdown complete
2025-05-23 17:37:40.579[1748009260579] | INFO  | SpringApplicationShutdownHook | o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-23 17:37:40.579[1748009260579] | DEBUG | SpringApplicationShutdownHook | org.hibernate.SQL                    - 
    drop table if exists exchange cascade constraints
2025-05-23 17:37:42.359[1748009262359] | DEBUG | SpringApplicationShutdownHook | org.hibernate.SQL                    - 
    drop table if exists position cascade constraints
2025-05-23 17:37:42.453[1748009262453] | DEBUG | SpringApplicationShutdownHook | org.hibernate.SQL                    - 
    drop table if exists tb_app_config cascade constraints
2025-05-23 17:37:42.536[1748009262536] | DEBUG | SpringApplicationShutdownHook | org.hibernate.SQL                    - 
    drop table if exists tb_exchange_stock cascade constraints
2025-05-23 17:37:42.728[1748009262728] | DEBUG | SpringApplicationShutdownHook | org.hibernate.SQL                    - 
    drop table if exists tb_exchange_stock_history cascade constraints
2025-05-23 17:37:42.837[1748009262837] | DEBUG | SpringApplicationShutdownHook | org.hibernate.SQL                    - 
    drop table if exists tb_news cascade constraints
2025-05-23 17:37:42.954[1748009262954] | DEBUG | SpringApplicationShutdownHook | org.hibernate.SQL                    - 
    drop table if exists tb_stock cascade constraints
2025-05-23 17:37:43.104[1748009263104] | DEBUG | SpringApplicationShutdownHook | org.hibernate.SQL                    - 
    drop table if exists tb_strategy cascade constraints
2025-05-23 17:37:43.220[1748009263220] | DEBUG | SpringApplicationShutdownHook | org.hibernate.SQL                    - 
    drop table if exists tb_user cascade constraints
2025-05-23 17:37:43.338[1748009263338] | DEBUG | SpringApplicationShutdownHook | org.hibernate.SQL                    - 
    drop table if exists tb_wallet cascade constraints
2025-05-23 17:37:43.472[1748009263472] | DEBUG | SpringApplicationShutdownHook | org.hibernate.SQL                    - 
    drop sequence if exists position_seq
2025-05-23 17:37:44.007[1748009264007] | INFO  | SpringApplicationShutdownHook | com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
2025-05-23 17:37:44.094[1748009264094] | INFO  | SpringApplicationShutdownHook | com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
